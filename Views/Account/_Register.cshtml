@model ParlanceNet.Models.RegisterViewModel
@if (ViewBag.Error != null)//new
{
    <script>
        var msg="@ViewBag.Error";
        alertify.error(msg, 4,function(){ clearInterval(4000);});
    </script>

}
@if (ViewBag.Message != null)
{
    <script>
        var msg="@ViewBag.Message";
        alertify.success(msg, 4,function(){ clearInterval(4000);});
    </script>

}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "register", @class = "sign-up-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;

    <h2 class="title">Sign Up</h2>

    <div class="text-danger">@ViewBag.Error</div>
    <div class="input-field">
        <i class="fas fa-at"></i>
        @Html.TextBoxFor(m => m.Email, new { @type = "email", @placeholder = "E-mail", required = "required", id = "reg-email" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>
    <div class="input-field">
        <i class="fas fa-user"></i>
        @Html.TextBoxFor(m => m.Fullname, new { id = "rFullname", @type = "text", @placeholder = "Full Name", required = "required", onkeyup = "fname();" })
        @Html.ValidationMessageFor(m => m.Fullname)
    </div>
    <div class="input-field">
        <i class="fas fa-calendar-day"></i>

        @Html.TextBoxFor(m => m.Birthdate, new { id = "rBirth", @type = "date", @placeholder = "Birthday", required = "required", onchange = "chkBirth();" })
        @Html.ValidationMessageFor(m => m.Birthdate)
    </div>
    <div class="input-field">
        <i class="fas fa-lock"></i>
        @Html.TextBoxFor(m => m.Password, new { type = "password", placeholder = "Password", id = "password", required = "required", onkeyup = "check();", title = "Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters" })
        @Html.ValidationMessageFor(m => m.Password)
    </div>
    <div class="input-field">
        <i class="fas fa-lock"></i>
        @Html.TextBoxFor(m => m.ConfirmPassword, new { @type = "password", @placeholder = "Confirm Password", id = "confirm_password", onkeyup = "check();", required = "required" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
    </div>
    <div class="input-field">
        <i class="fas fa-venus-mars"></i>
       
        <div class="gender-radio" >
            <b>Gender :  </b> @Html.RadioButtonFor(m => m.Gender, true) Women
            @Html.RadioButtonFor(m => m.Gender, false) Men
        </div>
        
        @Html.ValidationMessageFor(m => m.Gender)
    </div>

    <span id='message'></span>
    <input type="submit" value="Submit" class="btn solid" id="register-btn" ,disabled="true" />
    <hr>

}

@section Scripts {
    @Scripts.Render("~/ Scripts/jquery.validate.js")
    @Scripts.Render("~/ Scripts/jquery.validate.unobtrusive.js")

}
